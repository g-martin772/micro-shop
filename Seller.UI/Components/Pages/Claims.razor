@page "/claims"
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@using Seller.UI.Components.Layout
@attribute [Authorize]
@layout TestLayout

<h3>User Claims</h3>

@if (m_Claims == null)
{
    <p>Loading...</p>
}
else if (!m_Claims.Any())
{
    <p>No claims found.</p>
}
else
{
    <table class="table table-striped" style="* { height: 20px;}">
        <thead>
        <tr>
            <th>Type</th>
            <th>Value</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var claim in m_Claims)
        {
            <tr>
                <td>@claim.Type</td>
                <td>@claim.Value</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Claim>? m_Claims;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        m_Claims = user.Identity?.IsAuthenticated == true ? user.Claims.ToList() : [];
    }
}